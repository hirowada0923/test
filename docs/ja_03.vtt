WEBVTT

00:02.176 --> 00:03.366
それでは、モジュール 3 を始めましょう。 

00:03.406 --> 00:06.416
エピック、フィーチャー、ストーリー、MVP について説明します。  

00:07.516 --> 00:11.466
これは、アジャイル・プロダクト・オーナーシップ・コースの 10 個のモジュールのうちの 3 番目のモジュールです。 

00:11.816 --> 00:16.876
それではエピック、フィーチャー、ストーリー、MVP についてお話ししましょう。 

00:16.876 --> 00:18.806
この説明の中では、2 つの質問に回答していきます。 

00:19.586 --> 00:21.886
プロダクト・オーナーはどのようにプロダクトのフィーチャーを定義するか? 

00:22.896 --> 00:27.366
そして、プロダクト・オーナーは、チームが生み出す価値をどのように最大化するか? 

00:27.806 --> 00:29.116
ちなみに、これがプロダクト・オーナーの本来の仕事です。 

00:29.116 --> 00:33.076
このコースのモジュール 1 でプロダクト・オーナーの役割と責任について説明したときに、これについて述べたと思います。  

00:33.076 --> 00:35.276
 

00:35.676 --> 00:38.966
プロダクト・オーナーは、チームがイテレーションごとに生み出す価値を最大化するために、チームと協力します。  

00:39.316 --> 00:40.566
 

00:41.216 --> 00:43.116
それでは、先ほどの 2 つの質問に回答していきましょう。  

00:43.456 --> 00:45.476
プロダクト・オーナーはどのようにプロダクトのフィーチャーを定義するか、そしてチームが生み出す価値をどうやって最大化するか、という質問です。 

00:45.896 --> 00:48.566
 

00:49.146 --> 00:56.866
新規プロジェクトの開始時に、プロダクト・オーナーにドメイン・ナレッジがあっても、チームの他のメンバーがまだその知識を持っていない場合は、プロダクト・オーナーがプロダクトのフィーチャーを 1 人で定義することがあります。 

00:56.866 --> 00:58.816
 

00:59.486 --> 01:02.726
 

01:03.786 --> 01:07.736
しかしまもなく、チームは問題空間に対して貢献するための十分な知識を習得します。これは、専門のクロス・ファンクショナル・チームの数ある利点の 1 つであり、組織内で自然発生的に起こる相互トレーニングというものです。チームが問題空間について仕事で貢献できる十分な知識を習得すると、プロダクト・オーナーはチームと協力して、プロダクト・バックログを作成、管理、維持します。  

01:07.736 --> 01:11.386
 

01:11.876 --> 01:16.086
 

01:16.086 --> 01:20.486
 

01:20.486 --> 01:22.436
 

01:22.916 --> 01:27.336
プロダクト・バックログは、優先順位が付けられた実装予定のフィーチャーの集合です。あえて「実装予定のフィーチャー」と表現したのは、実装済みのフィーチャーについては、プロダクト・バックログから削除し、何らかの方法でアーカイブして、プロダクト・バックログを簡潔な状態に保つのが理想だからです。 

01:27.336 --> 01:32.336
 

01:32.336 --> 01:35.926
 

01:35.926 --> 01:38.976
 

01:39.886 --> 01:42.556
プロダクト・バックログはプロダクト・フィーチャーの集合ですが、大規模なフィーチャーはエピックと呼びます。  

01:43.326 --> 01:46.616
 

01:46.946 --> 01:51.936
1 回のイテレーションで実装できる位の小さなフィーチャーは、ストーリーと呼びます。 

01:52.116 --> 01:55.656
初回のリリースを構成するストーリーの集合を MVP (実現可能な最小の製品) と呼びます。 

01:55.656 --> 01:58.826
 

02:00.826 --> 02:04.226
それでは、これらのフィーチャーはどこから得られるのでしょうか? 

02:04.226 --> 02:07.436
フィーチャーの一部はディスカバリーの成果物として得られます。  

02:07.646 --> 02:11.366
ディスカバリーでは、正しい作業を行うために、対象の作業に実行価値があるかどうかを見極めますが、その中でフィーチャーが見つかることがあります。  

02:11.366 --> 02:15.426
 

02:15.696 --> 02:17.496
その時点では非常に大規模の場合もあります。 

02:17.496 --> 02:20.476
それらはエピックかもしれませんが、いずれにしてもフィーチャーではあります。 

02:21.906 --> 02:26.446
フィーチャーによっては、イテレーション 0 でチームで協力して定義されるものもあります。  

02:26.926 --> 02:29.916
プロジェクトの予算が承認され、チームも組織されています。  

02:29.916 --> 02:32.606
そして、イテレーション 1 以降のための準備段階で、ストーリーが作成され、バックログ内で優先順位が付けられます。  

02:32.956 --> 02:35.386
 

02:35.516 --> 02:41.256
さらに、インクリメンタル・デリバリーとその評価を通じて学ぶ過程で、他のフィーチャーが時間の経過とともに浮上してきます。 

02:41.256 --> 02:43.266
 

02:43.856 --> 02:48.156
プロダクト・バックログはまさに生き物であるため、その中の実装予定のストーリーはプロジェクトの進行中に変化する可能性があり、また実際に変化します。  

02:48.156 --> 02:51.556
 

02:55.496 --> 02:58.956
プロダクト・バックログはプロダクト全体を表します。 

03:00.386 --> 03:03.716
通常、プロジェクトに取り組むときは終了日が定義されており、一定の期間内にプロダクトをデリバリーするように作業しますが、このときにプロダクト・バックログがプロダクト全体を表している必要があります。 

03:03.716 --> 03:08.956
 

03:09.406 --> 03:13.566
 

03:13.926 --> 03:17.336
バックログは、プロジェクト進行中のいつの時点においても、チームがその時点で作成およびデリバリーを予定しているものすべてを表していなければなりません。  

03:17.466 --> 03:20.456
 

03:20.456 --> 03:23.486
 

03:23.696 --> 03:27.186
フィーチャーの中には、他のフィーチャーより明確に記述され、理解されるものがある一方で、まだ非常に大規模のものがある場合もありますが、まったく問題はありません。 

03:27.186 --> 03:30.286
 

03:31.596 --> 03:32.676
重要なのは以下の項目です。 

03:33.056 --> 03:35.306
チームが日程を予測する必要がある場合、バックログがプロダクト全体を表していることが重要です。  

03:36.016 --> 03:39.046
 

03:39.216 --> 03:43.726
実際、アジャイル・チームがバックログ内の項目の見積もりを済ませていて、チームのベロシティーを把握していることが、特定の日付までの進捗状況を予想できる唯一の方法です。  

03:43.726 --> 03:46.736
 

03:46.736 --> 03:49.076
 

03:49.946 --> 03:56.036
ステークホルダーがプロダクト全体のデリバリーがいつになるかに興味がある場合、バックログがプロダクト全体を表していなければならないのです。  

03:56.576 --> 03:59.186
 

03:59.376 --> 04:02.176
さらに、バックログ全体を見積もる必要があります。  

04:05.376 --> 04:08.226
プロダクト・オーナーはプロダクト・バックログを簡潔な状態に維持します。 

04:09.186 --> 04:11.736
プロダクト・バックログは、実際に実装されると考えられる項目に限定すべきです。  

04:11.736 --> 04:14.366
 

04:14.936 --> 04:18.505
これによってチームの集中が保たれ、プロダクト・オーナーによる優先順位付けも楽になります。  

04:18.966 --> 04:24.136
スプレッドシートのようなシンプルな方法でプロダクト・バックログを管理している場合、別のタブを作成して「仮置き場」などといったラベルを付けておきます。  

04:24.136 --> 04:28.796
 

04:29.206 --> 04:33.826
記録しておくべき重要なアイデアが浮かんだが、その時点ではビジョンに描かれたプロダクトに含めるつもりがない場合は、単純にそこに保管しておけます。 

04:33.826 --> 04:36.436
 

04:37.046 --> 04:39.536
こうすることで、バックログを簡潔に保ちます。  

04:41.156 --> 04:41.426
次に進みます。 

04:41.426 --> 04:45.596
それでは、エピック、フィーチャー、ストーリー、および MVP のキー・ポイントを説明します。  

04:45.656 --> 04:48.286
プロダクト・オーナーが最優先すべき最も重要な仕事は、すべてのイテレーションで、チームが生み出す価値を最大化することです。  

04:48.286 --> 04:51.646
 

04:51.946 --> 04:56.346
このために、プロダクト・オーナーはチームに対し、オーバーコミットさせたり、長時間労働を求めたりすることはありません。アジャイルの原則の 1 つは持続可能なペースです。すべてのメンバーが常に一定のペースで作業できなければならないのです。 

04:56.346 --> 05:01.436
 

05:01.436 --> 05:03.766
 

05:04.306 --> 05:07.376
その代わり、チームが生み出す価値を最大化するために、チームが常に、最も重要で、価値が高い作業に従事していくように図ります。 

05:07.696 --> 05:12.356
 

05:12.816 --> 05:18.256
そのために、チームと協力して、ビジネス価値に基づいてフィーチャーに優先順位を付けます。 

05:19.556 --> 05:24.386
さらに、チームが WIP (処理中の作業) を制限できるようにします。 

05:24.636 --> 05:27.716
そしてもちろん、「昨日の天気」ルールに従います。  

05:28.356 --> 05:31.516
以上の 3 つのポイントについて 1 つずつ検討していきましょう。 

05:31.826 --> 05:37.896
それでは、最初のポイント、プロダクト・オーナーによるビジネス価値に基づくフィーチャーの優先順位付けです。  

05:38.076 --> 05:42.196
一般には、プロダクト・オーナーが単独でこの作業をすることはありません。 

05:42.346 --> 05:44.456
チームやステークホルダーとコラボレーションし、相対的なビジネス価値に基づいてプロダクト・バックログの優先順位付けを行います。  

05:44.456 --> 05:47.286
 

05:47.646 --> 05:53.206
バックログ内のすべてのフィーチャーに固有の価値のランキングを割り当てることで優先順位を付けます。  

05:54.266 --> 05:57.306
この場合、これらの価値のランキングは学習に基づく推測であるため、この時点ではすべて仮定の価値ということになります。 

05:57.406 --> 06:00.856
 

06:02.156 --> 06:06.606
次に、これらの価値のランキングに基づいてプロダクト・バックログのフィーチャーをソートします。価値が最も高いフィーチャーがリストの先頭になります。  

06:06.606 --> 06:13.276
 

06:13.276 --> 06:19.076
一部のプロダクト・オーナーとチームはさらに、この価値をサイズで除算します。この場合、フィーチャーの仮定の価値が高ければ高いほど、さらにフィーチャーのサイズが小さければ小さいほど、投資収益率は大きくなります。 

06:19.576 --> 06:24.646
 

06:24.646 --> 06:27.416
 

06:27.416 --> 06:29.786
そして、相対的な優先順位も高くなります。  

06:30.356 --> 06:35.686
これを行うために、プランニング・ポーカーをして、チームが相対的サイズの見積もりを割り当てるのと同じ方法で、ストーリーに相対的価値の見積もりを割り当てます。 

06:36.136 --> 06:39.846
 

06:40.126 --> 06:44.606
この方法の利点は、プランニング・ポーカーをすることで、ステークホルダーを巻き込んで、個々のストーリーの相対的価値について合意が得られる点です。 

06:44.606 --> 06:48.426
 

06:49.056 --> 06:54.346
価値とサイズの見積もりが得られたら、例えば、あるストーリーの価値の見積もりの最大値を 20、サイズの見積もりを 3 とすると、予想収益率は約 6.5 になります。 

06:54.386 --> 07:00.776
 

07:00.776 --> 07:02.616
 

07:02.616 --> 07:06.516
別のストーリーについて、価値の見積もりが 20 でも、サイズの見積もりが 8 だった場合、予想収益率はわずか 2.5 ということになります。  

07:07.016 --> 07:09.776
 

07:10.096 --> 07:14.706
こうして、バックログは予想収益率に基づいて最大から最小へとソートできます。 

07:14.706 --> 07:18.586
当然ですが、予想収益率の高いストーリーが先に実装されます。 

07:19.776 --> 07:24.446
プロダクト・オーナーは、いくつかの方法で処理中の作業をチームが制限できるようにします。 

07:24.496 --> 07:28.826
まず、プロダクト・オーナーは、チームに必要な作業量を指示するのではなく、チーム自身が決められたイテレーションの中で完了できると判断した作業に取り組めるように図ります。 

07:29.176 --> 07:31.336
 

07:31.766 --> 07:34.586
これを行うために、プロダクト・オーナーは「昨日の天気」ルールに従います。このルールについてはこの後すぐに説明します。  

07:34.586 --> 07:35.796
 

07:36.946 --> 07:41.376
次に、プロダクト・オーナーはチームが 1 つにまとまって、優先順位に従ってフィーチャーに取り組めるようにします。  

07:41.616 --> 07:43.756
つまり、フィーチャーに 1 つずつ取り組むということです。 

07:44.416 --> 07:47.036
さらにプロダクト・オーナー自身も、実装するフィーチャーに対するコラボレーション、検討、および承認を行います。  

07:47.146 --> 07:49.906
 

07:50.646 --> 07:53.476
このようなアプローチを前にスォーミングと呼びました。このアプローチでは、従来のような分業で達成する方式を採用するのではなく、チーム全体が 1 つにまとまってストーリーを 1 つずつ完了していきます。 

07:53.476 --> 07:57.586
 

07:57.586 --> 08:00.736
 

08:01.376 --> 08:05.616
スォーミングで作業するチーム・メンバーは、ストーリーを完了するために貢献できることは何でも行い、チームがストーリーを完了できるよう、その時点で必要な手助けをします。  

08:05.686 --> 08:07.626
 

08:08.306 --> 08:12.006
たとえ自分があまり得意でない作業であっても関係ありません。 

08:12.006 --> 08:16.076
最後に、「昨日の天気」について説明しましょう。 

08:16.806 --> 08:20.746
プロダクト・オーナーは、チームが決められたイテレーションの中で完了できると判断した作業に取り組めるようにし、「前日の天気」のルールに従います。このルールでは、イテレーション・プランニングにおいて、チームは前回のイテレーションで完了した量を超える作業をコミットすることはできません。  

08:20.746 --> 08:24.716
 

08:24.716 --> 08:29.986
 

08:29.986 --> 08:31.756
 

08:32.246 --> 08:36.936
したがって、例えばチームがイテレーション 1 で 20 のストーリー・ポイントの作業を完了した場合、イテレーション 2 でチームが実行できる作業は 20 ストーリー・ポイント以下ということになります。  

08:37.395 --> 08:41.515
 

08:42.265 --> 08:45.635
イテレーション 2 で、イテレーションの終了前にチームが公約を達成した場合は、さらに作業を追加できます。  

08:45.635 --> 08:47.966
 

08:48.645 --> 08:51.876
このようにして、時間の経過とともにチームのベロシティーが増加します。  

08:52.166 --> 08:57.726
このルールはまさに、プロダクト・オーナーがチームに過剰な作業を押しつけないようにするブレーキの役目を果たします。  

08:58.476 --> 09:03.816
一般的に、自分が安心して取り組める以上の作業をするようにプロダクト・オーナーから要求された場合、「はい」と回答はしても、決められた作業量を達成しなかったり、それを達成するために手抜きをして作業の質を落としたりすることになり、自分の作業に不安を感じることになってしまいます。  

09:03.816 --> 09:08.766
 

09:08.766 --> 09:12.096
 

09:12.746 --> 09:16.176
 

09:16.246 --> 09:20.346
そのため、チームを保護するためにこのルールがあり、プロダクト・オーナーが過剰な作業をチームに要求しないようくい止めるのです。  

09:20.346 --> 09:24.516
 

09:26.926 --> 09:27.226
ここまでです。 

09:27.226 --> 09:30.006
これで、エピック、フィーチャー、ストーリー、および MVP についての説明を終わります。  

09:30.006 --> 09:33.976
モジュール 4 では、プロダクト・バックログのリファインメントについて説明します。 

