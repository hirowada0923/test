WEBVTT - Made with VTT Creator

00:02.176 --> 00:03.366
それでは、モジュール 3 を始めましょう。 

00:03.406 --> 00:06.416
エピック、フィーチャー、ストーリー、
MVP について説明します。  

00:07.516 --> 00:11.466
これは、アジャイル・プロダクト・オーナーシップ・コースの 
10 個のモジュールのうちの 3 番目のモジュールです。 

00:14.121 --> 00:16.876
それではエピック、フィーチャー、ストーリー、
MVP についてお話ししましょう。 

00:16.876 --> 00:18.806
この説明の中では、2 つの質問に回答していきます。 

00:19.586 --> 00:21.886
プロダクト・オーナーはどのように
プロダクトのフィーチャーを定義するか? 

00:22.896 --> 00:27.366
そして、プロダクト・オーナーは、チームが
生み出す価値をどのように最大化するか? 

00:28.056 --> 00:29.681
ちなみに、これがプロダクト・オーナーの本来の仕事です。 

00:29.786 --> 00:33.076
このコースのモジュール 1 でプロダクト・オーナーの
役割と責任について説明したときに、

00:33.076 --> 00:35.276
これについて述べたと思います。  

00:35.676 --> 00:38.966
プロダクト・オーナーは、チームがイテレーション
ごとに生み出す価値を最大化するために、

00:39.316 --> 00:40.566
チームと協力します。  

00:41.216 --> 00:43.116
それでは、先ほどの 2 つの質問に回答していきましょう。  

00:43.456 --> 00:45.476
プロダクト・オーナーはどのように
プロダクトのフィーチャーを定義するか、

00:45.896 --> 00:48.566
そしてチームが生み出す価値をどうやって
最大化するか、という質問です。 

00:52.456 --> 00:56.866
新規プロジェクトの開始時に、プロダクト・
オーナーにドメイン・ナレッジがあっても、

00:56.866 --> 00:58.816
チームの他のメンバーがまだその知識を持っていない場合は、

00:59.486 --> 01:02.726
プロダクト・オーナーがプロダクトの
フィーチャーを 1 人で定義することがあります。 

01:03.786 --> 01:07.736
しかしまもなく、チームは問題空間に対して
貢献するための十分な知識を習得します。

01:07.736 --> 01:11.386
これは、専門のクロス・ファンクショナル・
チームの数ある利点の 1 つであり、

01:11.876 --> 01:16.086
組織内で自然発生的に起こる
相互トレーニングというものです。

01:16.086 --> 01:20.486
チームが問題空間について仕事で貢献できる
十分な知識を習得すると、

01:20.486 --> 01:22.996
プロダクト・オーナーはチームと協力して、
プロダクト・バックログを作成、管理、維持します。  

01:24.236 --> 01:27.336
プロダクト・バックログは、優先順位が
付けられた実装予定のフィーチャーの集合です。

01:27.336 --> 01:32.336
あえて「実装予定のフィーチャー」と表現したのは、
実装済みのフィーチャーについては、

01:32.336 --> 01:35.926
プロダクト・バックログから削除し、
何らかの方法でアーカイブして、

01:35.926 --> 01:38.976
プロダクト・バックログを簡潔な
状態に保つのが理想だからです。 

01:39.886 --> 01:42.556
プロダクト・バックログはプロダクト・
フィーチャーの集合ですが、

01:43.326 --> 01:46.616
大規模なフィーチャーはエピックと呼びます。  

01:47.961 --> 01:51.936
1 回のイテレーションで実装できる位の
小さなフィーチャーは、ストーリーと呼びます。 

01:53.391 --> 01:55.656
初回のリリースを構成するストーリーの集合を 

01:55.656 --> 01:58.826
MVP (実現可能な最小の製品) と呼びます。 

02:00.826 --> 02:02.716
それでは、これらのフィーチャーは
どこから得られるのでしょうか? 

02:04.016 --> 02:07.436
フィーチャーの一部はディスカバリーの
成果物として得られます。  

02:07.646 --> 02:13.321
ディスカバリーでは、正しい作業を行うために、対象の
作業に実行価値があるかどうかを見極めますが、

02:14.006 --> 02:15.426
その中でフィーチャーが見つかることがあります。  

02:15.696 --> 02:17.496
その時点では非常に大規模の場合もあります。 

02:17.496 --> 02:20.476
それらはエピックかもしれませんが、
いずれにしてもフィーチャーではあります。 

02:21.906 --> 02:26.446
フィーチャーによっては、イテレーション 0 で
チームで協力して定義されるものもあります。  

02:27.406 --> 02:29.916
プロジェクトの予算が承認され、
チームも組織されています。  

02:29.916 --> 02:32.606
そして、イテレーション 1 以降のための
準備段階で、ストーリーが作成され、

02:32.956 --> 02:35.386
バックログ内で優先順位が付けられます。  

02:38.041 --> 02:41.256
さらに、インクリメンタル・デリバリーと
その評価を通じて学ぶ過程で、

02:41.256 --> 02:43.266
他のフィーチャーが時間の経過とともに浮上してきます。 

02:43.856 --> 02:48.441
プロダクト・バックログはまさに生き物であるため、
その中の実装予定のストーリーはプロジェクトの進行中に

02:48.811 --> 02:51.556
変化する可能性があり、また実際に変化します。  

02:55.806 --> 02:58.956
プロダクト・バックログはプロダクト全体を表します。 

03:00.386 --> 03:04.516
通常、プロジェクトに取り組むときは終了日が定義されており、

03:05.146 --> 03:09.066
一定の期間内にプロダクトをデリバリーするように作業しますが、

03:09.406 --> 03:13.566
このときにプロダクト・バックログが
プロダクト全体を表している必要があります。 

03:14.866 --> 03:17.336
バックログは、プロジェクト進行中のいつの時点においても、

03:17.466 --> 03:22.006
チームがその時点で作成およびデリバリーを予定して
いるものすべてを表していなければなりません。  

03:23.696 --> 03:27.966
フィーチャーの中には、他のフィーチャーより
明確に記述され、理解されるものがある一方で、

03:28.216 --> 03:30.286
まだ非常に大規模のものがある場合も
ありますが、まったく問題はありません。 

03:31.706 --> 03:32.676
重要なのは以下の項目です。 

03:33.056 --> 03:35.501
チームが日程を予測する必要がある場合、

03:36.016 --> 03:39.046
バックログがプロダクト全体を表していることが重要です。  

03:39.216 --> 03:41.041
実際、アジャイル・チームがバックログ内の項目の

03:41.406 --> 03:45.391
見積もりを済ませていて、チームの
ベロシティーを把握していることが、

03:45.591 --> 03:49.076
特定の日付までの進捗状況を予想できる唯一の方法です。  

03:49.946 --> 03:56.036
ステークホルダーがプロダクト全体の
デリバリーがいつになるかに興味がある場合、

03:56.576 --> 03:59.186
バックログがプロダクト全体を
表していなければならないのです。  

03:59.376 --> 04:02.176
さらに、バックログ全体を見積もる必要があります。  

04:05.681 --> 04:08.226
プロダクト・オーナーはプロダクト・
バックログを簡潔な状態に維持します。 

04:09.186 --> 04:14.321
プロダクト・バックログは、実際に実装される
と考えられる項目に限定すべきです。  

04:14.936 --> 04:18.505
これによってチームの集中が保たれ、プロダクト・
オーナーによる優先順位付けも楽になります。  

04:19.716 --> 04:22.401
スプレッドシートのようなシンプルな方法で
プロダクト・バックログを管理している場合、

04:22.911 --> 04:28.796
別のタブを作成して「仮置き場」など
といったラベルを付けておきます。  

04:29.206 --> 04:32.001
記録しておくべき重要なアイデアが浮かんだが、

04:32.381 --> 04:36.436
その時点ではビジョンに描かれたプロダクトに含める
つもりがない場合は、単純にそこに保管しておけます。 

04:37.046 --> 04:39.536
こうすることで、バックログを簡潔に保ちます。  

04:41.166 --> 04:45.596
それでは、エピック、フィーチャー、ストーリー、
および MVP のキー・ポイントを説明します。  

04:45.656 --> 04:48.286
プロダクト・オーナーが最優先すべき最も重要な仕事は、

04:48.286 --> 04:51.646
すべてのイテレーションで、チームが
生み出す価値を最大化することです。  

04:51.946 --> 04:56.826
このために、プロダクト・オーナーはチームに対し、オーバーコミット
させたり、長時間労働を求めたりすることはありません。

04:57.216 --> 04:59.896
アジャイルの原則の 1 つは持続可能なペースです。

04:59.921 --> 05:03.766
すべてのメンバーが常に一定のペースで作業できなければならないのです。 

05:04.306 --> 05:07.376
その代わり、チームが生み出す価値を最大化するために、

05:07.696 --> 05:12.356
チームが常に、最も重要で、価値が高い
作業に従事していくように図ります。 

05:12.816 --> 05:18.256
そのために、チームと協力して、ビジネス価値に
基づいてフィーチャーに優先順位を付けます。 

05:19.556 --> 05:24.386
さらに、チームが WIP (処理中の作業) を
制限できるようにします。 

05:24.636 --> 05:27.716
そしてもちろん、「昨日の天気」ルールに従います。  

05:28.356 --> 05:31.516
以上の 3 つのポイントについて 
1 つずつ検討していきましょう。 

05:34.001 --> 05:37.896
それでは、最初のポイント、プロダクト・オーナーによる
ビジネス価値に基づくフィーチャーの優先順位付けです。  

05:40.086 --> 05:42.196
一般には、プロダクト・オーナーが
単独でこの作業をすることはありません。 

05:42.346 --> 05:44.456
チームやステークホルダーとコラボレーションし、

05:44.456 --> 05:47.286
相対的なビジネス価値に基づいてプロダクト・
バックログの優先順位付けを行います。  

05:47.726 --> 05:53.206
バックログ内のすべてのフィーチャーに固有の価値の
ランキングを割り当てることで優先順位を付けます。  

05:54.266 --> 05:57.306
この場合、これらの価値のランキングは
学習に基づく推測であるため、

05:57.406 --> 06:00.856
この時点ではすべて仮定の価値ということになります。 

06:02.156 --> 06:07.306
次に、これらの価値のランキングに基づいてプロダクト・
バックログのフィーチャーをソートします。

06:07.381 --> 06:12.221
価値が最も高いフィーチャーがリストの先頭になります。  

06:13.196 --> 06:19.076
一部のプロダクト・オーナーとチームはさらに、
この価値をサイズで除算します。

06:19.576 --> 06:23.156
この場合、フィーチャーの仮定の価値が高ければ高いほど、

06:23.506 --> 06:25.866
さらにフィーチャーのサイズが小さければ小さいほど、
投資収益率は大きくなります。 

06:26.171 --> 06:29.786
そして、相対的な優先順位も高くなります。  

06:31.476 --> 06:35.686
これを行うために、プランニング・ポーカーをして、

06:36.136 --> 06:39.846
チームが相対的サイズの見積もりを割り当てるのと同じ方法で、
ストーリーに相対的価値の見積もりを割り当てます。 

06:40.126 --> 06:44.606
この方法の利点は、プランニング・ポーカーをすることで、
ステークホルダーを巻き込んで、

06:44.606 --> 06:48.426
個々のストーリーの相対的価値について合意が得られる点です。 

06:49.056 --> 06:51.566
価値とサイズの見積もりが得られたら、

06:52.051 --> 06:56.826
例えば、あるストーリーの価値の見積もりの最大値を 20、

06:57.366 --> 07:02.221
サイズの見積もりを 3 とすると、予想収益率は約 6.5 になります。 

07:02.526 --> 07:04.881
別のストーリーについて、価値の見積もりが 20 でも、

07:05.156 --> 07:09.776
サイズの見積もりが 8 だった場合、予想収益率は
わずか 2.5 ということになります。  

07:10.096 --> 07:13.076
こうして、バックログは予想収益率に基づいて
最大から最小へとソートできます。 

07:13.551 --> 07:18.586
当然ですが、予想収益率の高いストーリーが先に実装されます。 

07:19.776 --> 07:24.446
プロダクト・オーナーは、いくつかの方法で
処理中の作業をチームが制限できるようにします。 

07:24.711 --> 07:28.826
まず、プロダクト・オーナーは、チームに
必要な作業量を指示するのではなく、

07:29.176 --> 07:31.336
チーム自身が決められたイテレーションの中で完了できると
判断した作業に取り組めるように図ります。 

07:31.766 --> 07:34.056
これを行うために、プロダクト・オーナーは
「昨日の天気」ルールに従います。

07:34.081 --> 07:35.796
このルールについてはこの後すぐに説明します。  

07:36.946 --> 07:41.376
次に、プロダクト・オーナーはチームが 1 つにまとまって、
優先順位に従ってフィーチャーに取り組めるようにします。  

07:41.616 --> 07:43.756
つまり、フィーチャーに 1 つずつ取り組むということです。 

07:44.416 --> 07:47.036
さらにプロダクト・オーナー自身も、

07:47.146 --> 07:49.906
実装するフィーチャーに対するコラボレーション、
検討、および承認を行います。  

07:50.646 --> 07:53.131
このようなアプローチを前にスォーミングと呼びました。

07:53.276 --> 07:57.586
このアプローチでは、従来のような分業で
達成する方式を採用するのではなく、

07:57.586 --> 08:00.736
チーム全体が 1 つにまとまってストーリーを 
1 つずつ完了していきます。 

08:01.376 --> 08:05.616
スォーミングで作業するチーム・メンバーは、ストーリーを
完了するために貢献できることは何でも行い、

08:05.686 --> 08:07.626
チームがストーリーを完了できるよう、
その時点で必要な手助けをします。  

08:08.376 --> 08:12.246
たとえ自分があまり得意でない作業であっても関係ありません。 

08:13.366 --> 08:16.076
最後に、「昨日の天気」について説明しましょう。 

08:16.806 --> 08:21.611
プロダクト・オーナーは、チームが決められたイテレーションの
中で完了できると判断した作業に取り組めるようにし、

08:22.186 --> 08:25.511
「前日の天気」のルールに従います。このルールでは、
イテレーション・プランニングにおいて、

08:26.361 --> 08:31.731
チームは前回のイテレーションで完了した量を超える
作業をコミットすることはできません。  

08:32.741 --> 08:36.936
したがって、例えばチームがイテレーション 1 で 20 の
ストーリー・ポイントの作業を完了した場合、

08:37.395 --> 08:41.515
イテレーション 2 でチームが実行できる作業は 
20 ストーリー・ポイント以下ということになります。  

08:42.265 --> 08:46.470
イテレーション 2 で、イテレーションの
終了前にチームが公約を達成した場合は、

08:46.650 --> 08:47.966
さらに作業を追加できます。  

08:48.645 --> 08:51.876
このようにして、時間の経過とともに
チームのベロシティーが増加します。  

08:52.566 --> 08:57.911
このルールはまさに、プロダクト・オーナーが
チームに過剰な作業を押しつけないようにする
ブレーキの役目を果たします。  

08:58.476 --> 09:02.221
一般的に、自分が安心して取り組める以上の作業をするように
プロダクト・オーナーから要求された場合、

09:02.771 --> 09:06.191
「はい」と回答はしても、決められた作業量を達成し
なかったり、それを達成するために手抜きをして

09:06.731 --> 09:12.096
作業の質を落としたりすることになり、

09:12.746 --> 09:15.116
自分の作業に不安を感じることになってしまいます。  

09:15.521 --> 09:19.676
そのため、チームを保護するためにこのルールがあり、

09:20.511 --> 09:25.276
プロダクト・オーナーが過剰な作業を
チームに要求しないようくい止めるのです。  

09:26.941 --> 09:30.006
これで、エピック、フィーチャー、ストーリー、
および MVP についての説明を終わります。  

09:30.006 --> 09:33.976
モジュール 4 では、プロダクト・バックログの
リファインメントについて説明します。 

