WEBVTT - Made with VTT Creator

00:01.446 --> 00:05.220
それでは、モジュール 4、プロダクト・バックログの
リファインメントについて説明します。 

00:06.369 --> 00:09.886
これは、アジャイル・プロダクト・オーナーシップ・コースの 
10 個のモジュールのうちの 4 番目のモジュールです。 

00:12.793 --> 00:14.876
ここではプロダクト・バックログの
リファインメントについてお話しします。 

00:15.026 --> 00:18.986
この作業はプロダクト・バックログのグルーミングと呼ばれる
場合がありますが、私はリファインメントの方を使います。 

00:19.436 --> 00:20.536
どちらも同じ意味です。 

00:21.366 --> 00:25.086
すべてのイテレーションで、プロダクト・オーナーは
チームと協力してプロダクト・バックログをリファインします。 

00:26.366 --> 00:30.666
プロダクト・オーナーはどのようにプロダクト・バックログを
リファインし、なぜリファインするのでしょうか? 

00:30.752 --> 00:32.535
検討していきましょう。 

00:34.726 --> 00:38.486
プロダクト・オーナーは、チームと協力してイテレーション
中にプロダクト・バックログをリファインします。  

00:38.746 --> 00:39.806
チーム全体でこの作業にあたることもあります。  

00:40.266 --> 00:41.726
チームの特定のメンバーだけが作業する場合もあります。  

00:41.846 --> 00:46.266
チームは何が必要か、何が合理的かを
判断しなければなりません。  

00:46.446 --> 00:50.516
各イテレーションの中間に定期的に
スケールされたタイミングで、

00:51.046 --> 00:56.183
プロダクト・オーナーとチームは現在のイテレーションの
作業を休止し、今後の作業について確認します。  

00:56.956 --> 01:02.333
このプロダクト・バックログ・リファインメント・セッションは、
各イテレーションで同じ曜日、同じ時刻に開催することを

01:02.425 --> 01:04.566
お勧めします。そうすることで、そのセッションがリズム、

01:04.965 --> 01:06.726
つまりチームの作業の流れに組み込まれるからです。 

01:07.025 --> 01:10.886
さらに、このリファインメント・セッションを
イテレーションの最中に行うこともお勧めします。

01:10.886 --> 01:13.796
もちろん、どちらの場合も決めるのはチームです。 

01:14.496 --> 01:19.404
アジャイル的なプラクティスの適用方法に
関する多くの質問と同じく、

01:19.511 --> 01:23.246
この場合も回答は「チームに聞く」です。 

01:23.446 --> 01:28.509
次に進みます。プロダクト・バックログの
リファインメントには 2 つのポイントがあります。  

01:28.622 --> 01:33.306
第 1 に、次のイテレーション・プランニング・セッションの
ためにプロダクト・バックログを準備する必要があります。

01:33.306 --> 01:36.416
この「準備」が何を意味するかは、この後に詳しく説明します。 

01:37.146 --> 01:40.496
そして第 2 に、アジャイル・チームが大きな
全体像を見失わないことが重要です。 

01:40.996 --> 01:45.706
つまり、プロダクト・バックログ・リファインメント・
セッションは、すべてのイテレーションで、

01:45.706 --> 01:49.576
チームが一歩下がって、プロダクト・バックログ
全体の現状を確認する機会になります。 

01:50.116 --> 01:53.146
チームのメンバーはさまざまな質問を投げかけることが
できます。例えば、どれだけの作業が残っているか? 

01:54.349 --> 01:59.791
プロジェクトの終了日が規定されている場合は、
ベロシティーに基づいて、何をデリバリーできるか?  

02:00.196 --> 02:02.491
バックログには何が欠けているか?、などです。 

02:02.567 --> 02:09.346
プロジェクトでこれまでに得られたエンド・ユーザー
からのフィードバックを元にして

02:10.213 --> 02:19.705
後続のイテレーションの準備のためのプロダクト・
バックログのリファインメントに、イテレーションの
最大 10% を費やすことは問題のないプラクティスです。 

02:19.829 --> 02:25.836
したがって、2 週間のイテレーションの場合、
7 時間労働で合計 70 時間になり、

02:25.836 --> 02:31.316
その 10% は 7 時間、つまり丸 1 日ということになるため、

02:31.316 --> 02:35.716
2 週間のイテレーションでは、後続のイテレーションの準備のために

02:35.716 --> 02:37.796
バックログのリファインメントに丸 1 日
費やしてもかまわないということです。  

02:38.276 --> 02:42.085
それだけの時間を費やすのが
一般的だとは思いませんが、

02:42.211 --> 02:46.016
通常より多くの時間をかけることで、チームに
メリットがもたらされるはずです。 

02:46.296 --> 02:50.876
それでは、プロダクト・バックログのリファインメント
には何が含まれるのでしょうか?  

02:51.376 --> 02:59.046
バックログへの新規フィーチャーの追加や、バックログ内の
既存フィーチャーの優先順位付けのやり直し、

02:59.198 --> 03:08.557
あるいはフィーチャーが実際には不要と判断された場合には、
バックログからのフィーチャーの完全な削除などが含まれます。 

03:09.026 --> 03:12.696
さらに、バックログ内のフィーチャーの
実装方法をデザインします。 

03:13.313 --> 03:15.583
必要なハイレベルの設計は、

03:15.675 --> 03:20.682
チームが後続のイテレーションで実装する
フィーチャーの相対的サイズを見積もるために

03:20.850 --> 03:23.976
このバックログ・リファインメント・
セッションの中で実施できます。 

03:27.236 --> 03:29.360
プロダクト・オーナーは、チームと協力して、

03:29.436 --> 03:32.196
次のイテレーション・プランニング・セッションに備えて
プロダクト・バックログをしっかりと準備します。  

03:32.196 --> 03:35.196
これがプロダクト・バックログのリファインメントを
行う理由です。 

03:35.646 --> 03:39.086
プロダクト・バックログをきちんと準備して
イテレーション・プランニングを開始するチームは、

03:39.200 --> 03:41.296
そうでないチームより生産性が高くなります。 

03:41.846 --> 03:43.655
プロダクト・バックログをきちんと準備して
イテレーション・プランニングを開始するチームは、

03:43.762 --> 03:46.262
イテレーション・プランニング・セッションでの時間を、

03:46.339 --> 03:48.976
そのイテレーションで完了できると考える
作業の検討に費やし、

03:49.072 --> 03:52.076
残りの時間ではその作業をタスクに分解します。 

03:52.526 --> 03:55.501
プロダクト・バックログをきちんと準備せずに
イテレーション・プランニングを開始するチームは、

03:55.606 --> 03:58.026
イテレーションを開始するというより、

03:58.386 --> 04:00.846
イテレーション・プランニング・セッションの時間を
イテレーションの準備に費やすことになります。 

04:02.190 --> 04:03.526
きちんと準備されたプロダクト・バックログでは、

04:03.633 --> 04:10.436
後続のイテレーションで実装予定の
フィーチャーが小さく分割されており、

04:10.776 --> 04:13.196
その中のいくつかを 1 回の
イテレーションで実装できます。  

04:13.786 --> 04:17.255
チームには、1 回のイテレーション中に
複数のストーリーに取り組むことをお勧めします。

04:17.255 --> 04:20.536
これにより、イテレーションが終了した時点で
何もデリバリーできないというリスクを減らせます。 

04:20.926 --> 04:22.378
イテレーションの進行過程で、

04:22.455 --> 04:28.176
チーム全体がまとまって複数のストーリーに取り組み、
優先順位に従ってそれらを実行していくと、

04:28.606 --> 04:33.606
すべてが完了しなくても、最も重要な
ものは完了できます。  

04:33.956 --> 04:37.384
きちんと準備されたプロダクト・バックログでは、

04:37.496 --> 04:41.826
フィーチャーがユーザー・ストーリー形式で記述されます。

04:41.940 --> 04:50.106
ユーザー・ストーリー形式については、このコースの前提
条件になっているコースとモジュールで説明しています。  

04:50.106 --> 04:53.246
ストーリーには受け入れ基準の
合意についても詳述します。 

04:53.750 --> 04:57.786
この受入基準はチームが作成したものでなければならず、

04:57.956 --> 05:01.886
プロダクト・オーナーとの間で成果物についての共通理解を
持つことが目的であることを、以前に述べたと思います。 

05:03.112 --> 05:05.538
最後に、相対的サイズの見積もりを、

05:05.630 --> 05:10.776
通常はストーリー・ポイントで割り当てます。これに
ついても、前提のコースとモジュールで説明しています。 

05:13.586 --> 05:15.806
ここまでです。プロダクト・バックログの
リファインメントの説明はこれで終わります。  

05:15.866 --> 05:20.163
次は、非常に重要なトピックである
リリース・プランニングについてお話しします。  

