WEBVTT

00:01.446 --> 00:04.686
それでは、モジュール 4、プロダクト・バックログのリファインメントについて説明します。 

00:05.286 --> 00:09.886
これは、アジャイル・プロダクト・オーナーシップ・コースの 10 個のモジュールのうちの 4 番目のモジュールです。 

00:10.306 --> 00:14.876
ここではプロダクト・バックログのリファインメントについてお話しします。 

00:15.026 --> 00:18.986
この作業はプロダクト・バックログのグルーミングと呼ばれる場合がありますが、私はリファインメントの方を使います。 

00:19.436 --> 00:20.536
どちらも同じ意味です。 

00:21.366 --> 00:25.086
すべてのイテレーションで、プロダクト・オーナーはチームと協力してプロダクト・バックログをリファインします。 

00:26.366 --> 00:31.276
プロダクト・オーナーはどのようにプロダクト・バックログをリファインし、なぜリファインするのでしょうか? 

00:32.125 --> 00:34.656
検討していきましょう。 

00:34.726 --> 00:38.486
プロダクト・オーナーは、チームと協力してイテレーション中にプロダクト・バックログをリファインします。  

00:38.746 --> 00:39.806
チーム全体でこの作業にあたることもあります。  

00:40.266 --> 00:41.726
チームの特定のメンバーだけが作業する場合もあります。  

00:41.846 --> 00:46.266
チームは何が必要か、何が合理的かを判断しなければなりません。  

00:46.446 --> 00:50.516
各イテレーションの中間に定期的にスケールされたタイミングで、プロダクト・オーナーとチームは現在のイテレーションの作業を休止し、今後の作業について確認します。  

00:51.046 --> 00:54.016
 

00:54.016 --> 00:56.076
 

00:56.956 --> 01:01.326
このプロダクト・バックログ・リファインメント・セッションは、各イテレーションで同じ曜日、同じ時刻に開催することをお勧めします。そうすることで、そのセッションがリズム、つまりチームの作業の流れに組み込まれるからです。 

01:01.326 --> 01:04.566
 

01:04.965 --> 01:06.726
 

01:07.025 --> 01:10.886
さらに、このリファインメント・セッションをイテレーションの最中に行うこともお勧めします。もちろん、どちらの場合も決めるのはチームです。 

01:10.886 --> 01:13.796
 

01:14.496 --> 01:18.336
アジャイル的なプラクティスの適用方法に関する多くの質問と同じく、この場合も回答は「チームに聞く」です。 

01:18.336 --> 01:23.246
 

01:23.446 --> 01:26.556
次に進みます。プロダクト・バックログのリファインメントには 2 つのポイントがあります。  

01:26.736 --> 01:28.526
 

01:28.576 --> 01:33.306
第 1 に、次のイテレーション・プランニング・セッションのためにプロダクト・バックログを準備する必要があります。この「準備」が何を意味するかは、この後に詳しく説明します。 

01:33.306 --> 01:36.416
 

01:37.146 --> 01:40.496
そして第 2 に、アジャイル・チームが大きな全体像を見失わないことが重要です。 

01:40.996 --> 01:45.706
つまり、プロダクト・バックログ・リファインメント・セッションは、すべてのイテレーションで、チームが一歩下がって、プロダクト・バックログ全体の現状を確認する機会になります。 

01:45.706 --> 01:49.576
 

01:50.116 --> 01:53.146
チームのメンバーはさまざまな質問を投げかけることができます。例えば、どれだけの作業が残っているか? 

01:53.296 --> 01:58.006
プロジェクトの終了日が規定されている場合は、ベロシティーに基づいて、その終了日までに何をデリバリーできるか?  

01:58.006 --> 01:59.796
 

02:00.196 --> 02:04.856
プロジェクトでこれまでに得られたエンド・ユーザーからのフィードバックを元に、バックログには何が欠けているか、などです。 

02:04.856 --> 02:09.346
 

02:10.045 --> 02:15.646
後続のイテレーションの準備のためのプロダクト・バックログのリファインメントに、イテレーションの最大 10% を費やすことは問題のないプラクティスです。 

02:16.246 --> 02:19.966
 

02:19.966 --> 02:25.836
したがって、2 週間のイテレーションの場合、7 時間労働で合計 70 時間になり、その 10% は 7 時間、つまり丸 1 日ということになるため、2 週間のイテレーションでは、後続のイテレーションの準備のためにバックログのリファインメントに丸 1 日費やしてもかまわないということです。  

02:25.836 --> 02:31.316
 

02:31.316 --> 02:35.716
 

02:35.716 --> 02:37.796
 

02:38.276 --> 02:43.596
それだけの時間を費やすのが一般的だとは思いませんが、通常より多くの時間をかけることで、チームにメリットがもたらされるはずです。 

02:43.966 --> 02:46.016
 

02:46.296 --> 02:50.876
それでは、プロダクト・バックログのリファインメントには何が含まれるのでしょうか?  

02:51.376 --> 02:59.046
バックログへの新規フィーチャーの追加や、バックログ内の既存フィーチャーの優先順位付けのやり直し、あるいはフィーチャーが実際には不要と判断された場合には、バックログからのフィーチャーの完全な削除などが含まれます。 

02:59.366 --> 03:06.146
 

03:06.466 --> 03:08.706
 

03:09.026 --> 03:12.696
さらに、バックログ内のフィーチャーの実装方法をデザインします。 

03:12.916 --> 03:18.116
チームが後続のイテレーションで実装するフィーチャーの相対的サイズを見積もるために必要な高位設計は、このバックログ・リファインメント・セッションの中で実施できます。 

03:18.116 --> 03:21.796
 

03:21.796 --> 03:23.976
 

03:26.916 --> 03:30.626
プロダクト・オーナーは、チームと協力して、次のイテレーション・プランニング・セッションに備えてプロダクト・バックログをしっかりと準備します。  

03:30.626 --> 03:32.196
 

03:32.196 --> 03:35.196
これがプロダクト・バックログのリファインメントを行う理由です。 

03:35.646 --> 03:40.246
プロダクト・バックログをきちんと準備してイテレーション・プランニングを開始するチームは、そうでないチームより生産性が高くなります。 

03:40.466 --> 03:41.296
 

03:41.846 --> 03:43.106
プロダクト・バックログをきちんと準備してイテレーション・プランニングを開始するチームは、イテレーション・プランニング・セッションでの時間を、そのイテレーションで完了できると考える作業の検討に費やし、残りの時間ではその作業をタスクに分解します。 

03:43.106 --> 03:46.766
 

03:46.766 --> 03:48.656
 

03:48.736 --> 03:52.076
 

03:52.526 --> 03:54.006
プロダクト・バックログをきちんと準備せずにイテレーション・プランニングを開始するチームは、イテレーションを開始するというより、イテレーション・プランニング・セッションの時間をイテレーションの準備に費やすことになります。 

03:54.416 --> 03:58.026
 

03:58.386 --> 04:00.846
 

04:01.976 --> 04:06.196
きちんと準備されたプロダクト・バックログでは、後続のイテレーションで実装予定のフィーチャーが小さく分割されており、その中のいくつかを 1 回のイテレーションで実装できます。  

04:06.196 --> 04:10.436
 

04:10.776 --> 04:13.196
 

04:13.786 --> 04:17.255
チームには、1 回のイテレーション中に複数のストーリーに取り組むことをお勧めします。これにより、イテレーションが終了した時点で何もデリバリーできないというリスクを減らせます。 

04:17.255 --> 04:20.536
 

04:20.926 --> 04:26.315
イテレーションの進行過程で、チーム全体がまとまって複数のストーリーに取り組み、優先順位に従ってそれらを実行していくと、すべてが完了しなくても、最も重要なものは完了できます。  

04:26.315 --> 04:28.176
 

04:28.606 --> 04:33.606
 

04:33.956 --> 04:40.146
きちんと準備されたプロダクト・バックログでは、フィーチャーがユーザー・ストーリー形式で記述されます。ユーザー・ストーリー形式については、このコースの前提条件になっているコースとモジュールで説明しています。  

04:40.426 --> 04:45.976
 

04:46.136 --> 04:50.106
 

04:50.106 --> 04:53.246
ストーリーには受け入れ基準の合意についても詳述します。 

04:53.246 --> 04:57.786
この受け入れ基準はチームが作成したものでなければならず、プロダクト・オーナーとの間で成果物についての共通理解を持つことが目的であることを、以前に述べたと思います。 

04:57.956 --> 05:01.886
 

05:02.456 --> 05:06.866
最後に、相対的サイズの見積もりを、通常はストーリー・ポイントで割り当てます。これについても、前提のコースとモジュールで説明しています。 

05:06.866 --> 05:10.776
 

05:11.206 --> 05:15.806
ここまでです。プロダクト・バックログのリファインメントの説明はこれで終わります。  

05:15.866 --> 05:19.736
次は、非常に重要なトピックであるリリース・プランニングについてお話しします。  

05:19.736 --> 05:20.540
[END OF SEGMENT]  

